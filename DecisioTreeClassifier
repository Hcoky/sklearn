import numpy as np
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt

rng = np.random.RandomState(1)
x = np.sort(5 * rng.rand(80, 1), axis=0)

y = np.sin(x).ravel()
y[::5] += 3 * (0.5 - rng.rand(16))
print("x{}\n".format(x))
print("y{}".format(y))
plt.figure()
plt.scatter(x, y, s=20, edgecolors="black", c="darkorange", label="data")
print(x.shape)
print(len(y))
plt.show()

regr_1 = DecisionTreeClassifier(max_depth=2)
regr_2 = DecisionTreeClassifier(max_depth=5)

regr_1.fit(x, y.astype('int'))
regr_2.fit(x, y.astype('int'))

x_test = np.arange(0.0, 5.0, 0.01)[:, np.newaxis]

y_1 = regr_1.predict(x_test)
y_2 = regr_2.predict(x_test)

# plt.figure()

print("y_2{}\n".format(y_2))
print("x_test{}".format(x_test))

plt.scatter(x, y, s=20, edgecolors="black", c="darkorange", label="data")
plt.plot(x_test, y_1, color="cornflowerblue", label="max_depth=2", linewidth=6)
plt.plot(x_test, y_2, color="yellowgreen", label="max_depth=5", linewidth=2)
plt.xlabel("data")
plt.ylabel("target")
plt.title("Decision Tree Regression")
plt.legend()
plt.show()
